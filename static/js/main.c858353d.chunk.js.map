{"version":3,"sources":["logo.svg","component/Calc.js","App.js","reportWebVitals.js","index.js"],"names":["Calc","handlenum1","event","setState","num1","target","value","handlenum2","num2","addition","total","parseInt","state","subtraction","multiplication","division","for","type","id","this","onChange","onClick","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAAe,I,uCC4DAA,E,kDAxDX,aAAc,IAAD,8BACT,gBAOJC,WAAW,SAACC,GACR,EAAKC,SAAS,CACVC,KAAKF,EAAMG,OAAOC,SAVb,EAabC,WAAY,SAACL,GACT,EAAKC,SAAS,CACVK,KAAKN,EAAMG,OAAOC,SAfb,EAkBbG,SAAW,WACP,EAAKN,SAAS,CACVO,MAAMC,SAAS,EAAKC,MAAMR,MAAQO,SAAS,EAAKC,MAAMJ,SApBjD,EAuBbK,YAAY,WACR,EAAKV,SAAS,CACVO,MAAMC,SAAS,EAAKC,MAAMR,MAAMO,SAAS,EAAKC,MAAMJ,SAzB/C,EA4BbM,eAAe,WACX,EAAKX,SAAS,CACVO,MAAMC,SAAS,EAAKC,MAAMR,MAAMO,SAAS,EAAKC,MAAMJ,SA9B/C,EAiCbO,SAAS,WACL,EAAKZ,SAAS,CACVO,MAAMC,SAAS,EAAKC,MAAMR,MAAMO,SAAS,EAAKC,MAAMJ,SAjCxD,EAAKI,MAAO,CACRR,KAAK,GACLI,KAAK,GACLE,MAAM,IALD,E,0CAsCjB,WACI,OACI,gCACA,mDACI,uBAAOM,IAAI,OAAX,uBACA,uBAAOC,KAAK,SAASC,GAAG,OAAOZ,MAAOa,KAAKP,MAAMR,KAAMgB,SAAUD,KAAKlB,aACtE,uBAAOe,IAAI,OAAX,uBACA,uBAAOC,KAAK,SAASC,GAAG,OAAOZ,MAAOa,KAAKP,MAAMJ,KAAMY,SAAUD,KAAKZ,aACtE,wBAAQc,QAASF,KAAKV,SAAtB,iBACA,wBAAQY,QAASF,KAAKN,YAAtB,iBACA,wBAAQQ,QAASF,KAAKL,eAAtB,iBACA,wBAAQO,QAASF,KAAKJ,SAAtB,iBACA,2CAAcI,KAAKP,MAAMF,gB,GAnDlBY,aCWJC,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCIOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c858353d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\r\nimport '../App.css'\r\n\r\nclass Calc extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state=({\r\n            num1:'',\r\n            num2:'',\r\n            total:''\r\n        })\r\n    }\r\n    handlenum1=(event)=>{\r\n        this.setState({\r\n            num1:event.target.value\r\n        })\r\n    }\r\n    handlenum2 =(event) => {\r\n        this.setState({\r\n            num2:event.target.value\r\n        })\r\n    }\r\n    addition = ()=>{\r\n        this.setState({\r\n            total:parseInt(this.state.num1) + parseInt(this.state.num2)\r\n        })\r\n    }\r\n    subtraction=()=>{\r\n        this.setState({\r\n            total:parseInt(this.state.num1)-parseInt(this.state.num2)\r\n        })\r\n    }\r\n    multiplication=()=>{\r\n        this.setState({\r\n            total:parseInt(this.state.num1)*parseInt(this.state.num2)\r\n        })\r\n    }\r\n    division=()=>{\r\n        this.setState({\r\n            total:parseInt(this.state.num1)/parseInt(this.state.num2)\r\n        })\r\n    }\r\nrender(){\r\n    return(\r\n        <div>\r\n        <h1>Simple Calculator</h1>\r\n            <label for=\"num1\">Number 1:</label>\r\n            <input type=\"number\" id=\"num1\" value={this.state.num1} onChange={this.handlenum1}/>\r\n            <label for=\"num2\">Number 2:</label>\r\n            <input type=\"number\" id=\"num2\" value={this.state.num2} onChange={this.handlenum2}/>\r\n            <button onClick={this.addition}>Add</button>\r\n            <button onClick={this.subtraction}>Sub</button>\r\n            <button onClick={this.multiplication} >Mul</button>\r\n            <button onClick={this.division}>Div</button>\r\n            <h3>Output : {this.state.total}</h3>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Calc;","import logo from './logo.svg';\nimport './App.css';\nimport Calc from './component/Calc';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Calc/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}